<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnApply.Text" xml:space="preserve">
    <value>Anwenden</value>
  </data>
  <data name="btnCancel.Text" xml:space="preserve">
    <value>Schließen</value>
  </data>
  <data name="grbGeneralTemporaryFolder.Text" xml:space="preserve">
    <value>Temporärer Ordner</value>
  </data>
  <data name="chkGeneralExtractNwb.Text" xml:space="preserve">
    <value>NWB-Dateien (*.nwb)</value>
  </data>
  <data name="chkGeneralExtractSplitFile.Text" xml:space="preserve">
    <value>Dateien teilen (*.001)</value>
  </data>
  <data name="chkGeneralExtractBZip2.Text" xml:space="preserve">
    <value>BZip2-Dateien (*.bz;*.bzip2)</value>
  </data>
  <data name="chkGeneralExtractRar.Text" xml:space="preserve">
    <value>RAR-Dateien (*.rar)</value>
  </data>
  <data name="chkGeneralExtract7z.Text" xml:space="preserve">
    <value>7Zip-Dateien (*.7z;*.7zip)</value>
  </data>
  <data name="chkGeneralExtractZip.Text" xml:space="preserve">
    <value>Zip-Dateien (*.zip)</value>
  </data>
  <data name="lblGeneralExtract.Text" xml:space="preserve">
    <value>Bei Bedarf extrahieren.</value>
  </data>
  <data name="grbGeneralFiles.Text" xml:space="preserve">
    <value>Dateien</value>
  </data>
  <data name="cbGeneralFileSize.Items" xml:space="preserve">
    <value>Automatisch</value>
  </data>
  <data name="grbGeneralFileSize.Text" xml:space="preserve">
    <value>Größe zeigen</value>
  </data>
  <data name="rbGeneralDiscDelete.Text" xml:space="preserve">
    <value>Nur Datenträger 1-Ordner behalten und Datenträger 2-Ordner löschen (experimentell)</value>
  </data>
  <data name="rbGeneralDiscClean.Text" xml:space="preserve">
    <value>Alle Ordner für Datenträger 1 und Datenträger 2 getrennt halten (Standard)</value>
  </data>
  <data name="grbGeneralPartitions.Text" xml:space="preserve">
    <value>Spielverzeichnisse anpassen</value>
  </data>
  <data name="tabSettingsGeneral.Text" xml:space="preserve">
    <value>Allgemein</value>
  </data>
  <data name="lblCommentsScrubCopy.Text" xml:space="preserve">
    <value>Für die Scrub-Methode wird immer der Standard „Title [Game Code]“ verwendet, basierend auf dem internen Namen (vom Entwickler definiert). Im Scrub-Kopiermodus werden die Laufwerke 1 und 2 immer in separaten Ordnern gespeichert, außer in bestimmten Fällen, in denen die Erkennungsmethode vom Entwickler vergebene allgemeine Namen identifizieren kann. In diesem Fall werden die Laufwerke 1 und 2 im selben Ordner gespeichert .</value>
  </data>
  <data name="lblCommentsExactCopy.Text" xml:space="preserve">
    <value>Der Namensstil funktioniert derzeit nur mit exakter Kopie der Dateien (1:1) und kann sowohl den internen Namen als auch den kommerziellen Namen (über wiitdb.xml) verwenden. Diese Option kann vom Benutzer auf der Registerkarte „Titel“ konfiguriert werden. Im exakten Kopiermodus (1:1) werden die Datenträger 1 und 2 immer im selben Ordner gespeichert.</value>
  </data>
  <data name="lblComments.Text" xml:space="preserve">
    <value>KOMMENTARE:</value>
  </data>
  <data name="cbAdjustNamingStyle.Items" xml:space="preserve">
    <value>Titel [Spielcode]</value>
  </data>
  <data name="cbAdjustNamingStyle.Items1" xml:space="preserve">
    <value>[Spielcode]</value>
  </data>
  <data name="lblNomenclature.Text" xml:space="preserve">
    <value>Namensstil:</value>
  </data>
  <data name="grpNomenclatureFolderFormat.Text" xml:space="preserve">
    <value>Ordnerformat</value>
  </data>
  <data name="tabSettingsNomenclature.Text" xml:space="preserve">
    <value>Nomenklatur</value>
  </data>
  <data name="chkMultipleInstances.Text" xml:space="preserve">
    <value>Ausführung mehrerer Instanzen des Programms zulassen</value>
  </data>
  <data name="chkLoadDatabase.Text" xml:space="preserve">
    <value>Datenbank beim Programmstart laden (erhöht Programmstartzeit)</value>
  </data>
  <data name="chkNotify.Text" xml:space="preserve">
    <value>Taskleistenbenachrichtigungen aktivieren (Standardbenachrichtigungen werden weiterhin normal angezeigt)</value>
  </data>
  <data name="chkScreensaver.Text" xml:space="preserve">
    <value>Bildschirmschoner deaktivieren (Screensaver)</value>
  </data>
  <data name="chkNetVerify.Text" xml:space="preserve">
    <value>Überprüfen Sie die Internetverbindung, wenn Sie das Programm starten</value>
  </data>
  <data name="chkStartWindowMaximized.Text" xml:space="preserve">
    <value>Startfenster maximiert</value>
  </data>
  <data name="chkGeneralSHA1.Text" xml:space="preserve">
    <value>Überprüfen Sie die SHA-1-Signatur während der Übertragung</value>
  </data>
  <data name="chkGeneralRecursiva.Text" xml:space="preserve">
    <value>Verzeichnisse rekursiv durchsuchen (nur für Fenster "Dateien (Quelle)")</value>
  </data>
  <data name="chkGeneralTemporaryBuffer.Text" xml:space="preserve">
    <value>Übertragungen im temporären Speicher (Puffer) verwenden</value>
  </data>
  <data name="chkGeneralMD5.Text" xml:space="preserve">
    <value>Berechnen Sie die MD5-Signatur während der Übertragung</value>
  </data>
  <data name="grbGeneralDiverse.Text" xml:space="preserve">
    <value>Mehrere</value>
  </data>
  <data name="tabSettingsSeveral.Text" xml:space="preserve">
    <value>Mehrere</value>
  </data>
  <data name="lblFormat.Text" xml:space="preserve">
    <value>Format:</value>
  </data>
  <data name="lblAlignment.Text" xml:space="preserve">
    <value>Ausrichtung:</value>
  </data>
  <data name="cbScrubAlign.Items" xml:space="preserve">
    <value>Automatisch</value>
  </data>
  <data name="chkGeneralScrubFlushSD.Text" xml:space="preserve">
    <value>Löschen Sie die Dateipuffer, damit die SD-Karte fast sofort ausgeworfen werden kann</value>
  </data>
  <data name="grbGeneralScrub.Text" xml:space="preserve">
    <value>Schrubben</value>
  </data>
  <data name="label28.Text" xml:space="preserve">
    <value>FST (FileSystem Table) ist ein Dateisystem, das in ein Verzeichnis extrahiert wird, das alle realen und virtuellen Dateien eines Archivs enthält. Nintendont verwendet die FST-Dateien, um ein internes virtuelles ISO-Image zu erstellen und das Spiel von dieser virtuellen ISO zu laden.</value>
  </data>
  <data name="label31.Text" xml:space="preserve">
    <value>Entfernt unnötige Daten (Müll), indem sie durch einen konstanten Bytewert (0xff oder 0x00) ersetzt werden. Die Datei hat jedoch eine kleinere Größe, wodurch die Datenintegrität gewahrt bleibt.</value>
  </data>
  <data name="label20.Text" xml:space="preserve">
    <value>Ähnlich wie XCopy, mit dem Unterschied, dass die in den Dateien vorhandenen Mülldaten (Garbage) bereinigt werden. Die ursprüngliche Dateigröße wird beibehalten. Garbage-Daten werden entfernt, während die Integrität anderer Daten gewahrt bleibt.</value>
  </data>
  <data name="label17.Text" xml:space="preserve">
    <value>Kopiert eine oder mehrere Dateien von einem Speicherort (Quelle) an einen anderen (Ziel). Die Datei ist nicht komprimiert, nicht Teil eines Containers und es werden keine Datenmüll entfernt.</value>
  </data>
  <data name="rbTransferSystemXCopy.Text" xml:space="preserve">
    <value>XCopy (Standard)</value>
  </data>
  <data name="grbTransferSystem.Text" xml:space="preserve">
    <value>Transfersystem verwendet werden</value>
  </data>
  <data name="tabSettingsTransfer.Text" xml:space="preserve">
    <value>Spielübertragung</value>
  </data>
  <data name="grpTitlesCoverFolder.Text" xml:space="preserve">
    <value>Covers-Ordner (Cache -&gt; Origin)</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>Speicherort des Ordners:</value>
  </data>
  <data name="tabCoverDisc.Text" xml:space="preserve">
    <value>Rabatt</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>Speicherort des Ordners:</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>Speicherort des Ordners:</value>
  </data>
  <data name="label35.Text" xml:space="preserve">
    <value>Speicherort des Ordners:</value>
  </data>
  <data name="tabCoverFull.Text" xml:space="preserve">
    <value>Vollständig</value>
  </data>
  <data name="grbCoverTransfer.Text" xml:space="preserve">
    <value>Einrichtung des USB-Ladegeräts (Transferabdeckungen -&gt; Ziel)</value>
  </data>
  <data name="chkCoverRecursiveSearch.Text" xml:space="preserve">
    <value>Verwenden Sie die rekursive Hautsuche (Suche in allen Regionen)</value>
  </data>
  <data name="chkCoverEnableTransfer.Text" xml:space="preserve">
    <value>Aktivieren Sie die Übertragung von Skins zwischen Geräten</value>
  </data>
  <data name="chkCoverSynchronizeDelete.Text" xml:space="preserve">
    <value>Löschen Sie Skins für Spiele, die nicht auf der Liste stehen</value>
  </data>
  <data name="grpCoversSynchronize.Text" xml:space="preserve">
    <value>Synchronisieren</value>
  </data>
  <data name="tabSettingsCovers.Text" xml:space="preserve">
    <value>Abdeckungen</value>
  </data>
  <data name="cbTitleLanguage.Items" xml:space="preserve">
    <value>Englisch</value>
  </data>
  <data name="cbTitleLanguage.Items1" xml:space="preserve">
    <value>Französisch</value>
  </data>
  <data name="cbTitleLanguage.Items2" xml:space="preserve">
    <value>Deutsch</value>
  </data>
  <data name="cbTitleLanguage.Items3" xml:space="preserve">
    <value>Spanisch</value>
  </data>
  <data name="cbTitleLanguage.Items4" xml:space="preserve">
    <value>Italienisch</value>
  </data>
  <data name="cbTitleLanguage.Items5" xml:space="preserve">
    <value>Niederländisch</value>
  </data>
  <data name="cbTitleLanguage.Items6" xml:space="preserve">
    <value>Portugiesisch</value>
  </data>
  <data name="cbTitleLanguage.Items7" xml:space="preserve">
    <value>japanisch</value>
  </data>
  <data name="cbTitleLanguage.Items8" xml:space="preserve">
    <value>Russisch</value>
  </data>
  <data name="cbTitleLanguage.Items9" xml:space="preserve">
    <value>Koreanisch</value>
  </data>
  <data name="cbTitleLanguage.Items10" xml:space="preserve">
    <value>Traditionelles Chinesisch</value>
  </data>
  <data name="cbTitleLanguage.Items11" xml:space="preserve">
    <value>Vereinfachtes Chinesisch</value>
  </data>
  <data name="grbTitleLanguage.Text" xml:space="preserve">
    <value>Titelsprache</value>
  </data>
  <data name="grbTitleFileLocation.Text" xml:space="preserve">
    <value>Speicherort</value>
  </data>
  <data name="rbGameXmlName.Text" xml:space="preserve">
    <value>Verwenden Sie den Handelsnamen für das Spiel über wiitdb.xml (EMPFOHLEN! - erfordert die Datei wiitdb.xml)</value>
  </data>
  <data name="rbGameInternalName.Text" xml:space="preserve">
    <value>Internen Produktionsnamen für das Spiel verwenden (75 % unterstützt)</value>
  </data>
  <data name="chkGameTitleCustom.Text" xml:space="preserve">
    <value>Benutzerdefinierte Titel verwenden (custom-titles.txt)</value>
  </data>
  <data name="chkGameTitle.Text" xml:space="preserve">
    <value>Verwenden Sie GameTDB (titles.txt)</value>
  </data>
  <data name="grbTitleDiverse.Text" xml:space="preserve">
    <value>Verschiedenes (Programmneustart erforderlich, um wirksam zu werden)</value>
  </data>
  <data name="tabSettingsTitle.Text" xml:space="preserve">
    <value>Titel</value>
  </data>
  <data name="grbDolphinFolder.Text" xml:space="preserve">
    <value>Pfad zum Emulator</value>
  </data>
  <data name="rbDSPHLE.Text" xml:space="preserve">
    <value>DSP-HLE (Standard)</value>
  </data>
  <data name="grbDolphinAudio.Text" xml:space="preserve">
    <value>Audio</value>
  </data>
  <data name="grbDolphinVideo.Text" xml:space="preserve">
    <value>Video</value>
  </data>
  <data name="grbDolphin.Text" xml:space="preserve">
    <value>Emulator konfigurieren</value>
  </data>
  <data name="lblTimeInterval.Text" xml:space="preserve">
    <value>HINWEIS: Die Anpassung der Zeitintervalleinstellung wird erst nach dem Neustart des Programms wirksam.</value>
  </data>
  <data name="cbVerificationInterval.Items" xml:space="preserve">
    <value>5 Minuten</value>
  </data>
  <data name="cbVerificationInterval.Items1" xml:space="preserve">
    <value>10 Minuten</value>
  </data>
  <data name="cbVerificationInterval.Items2" xml:space="preserve">
    <value>15 Minuten</value>
  </data>
  <data name="cbVerificationInterval.Items3" xml:space="preserve">
    <value>30 Minuten</value>
  </data>
  <data name="cbVerificationInterval.Items4" xml:space="preserve">
    <value>1 Stunde</value>
  </data>
  <data name="cbVerificationInterval.Items5" xml:space="preserve">
    <value>2 Stunden</value>
  </data>
  <data name="cbVerificationInterval.Items6" xml:space="preserve">
    <value>3 Stunden</value>
  </data>
  <data name="cbVerificationInterval.Items7" xml:space="preserve">
    <value>4 Stunden</value>
  </data>
  <data name="lblUpdateInterval.Text" xml:space="preserve">
    <value>Prüfintervall:</value>
  </data>
  <data name="lblPass.Text" xml:space="preserve">
    <value>Passwort:</value>
  </data>
  <data name="lblUser.Text" xml:space="preserve">
    <value>Benutzer:</value>
  </data>
  <data name="lblServerProxy.Text" xml:space="preserve">
    <value>Proxy Server:</value>
  </data>
  <data name="chkUpdateServerProxy.Text" xml:space="preserve">
    <value>Proxy-Server verwenden</value>
  </data>
  <data name="chkUpdateFileLog.Text" xml:space="preserve">
    <value>Aktualisierungen an Protokolldatei anhängen</value>
  </data>
  <data name="chkUpdateBetaChannel.Text" xml:space="preserve">
    <value>Wechseln Sie zu BETA-Kanal-Updates</value>
  </data>
  <data name="chkUpdateVerifyStart.Text" xml:space="preserve">
    <value>Beim Start nach Updates suchen</value>
  </data>
  <data name="grbUpdate.Text" xml:space="preserve">
    <value>Update Einstellungen</value>
  </data>
  <data name="tabSettingsUpdates.Text" xml:space="preserve">
    <value>Aktualisierung</value>
  </data>
  <data name="lblLanguageComments.Text" xml:space="preserve">
    <value>HINWEIS: Die Anpassung der Spracheinstellung wird erst nach einem Neustart des Programms wirksam.</value>
  </data>
  <data name="lblLanguage.Text" xml:space="preserve">
    <value>Sprache:</value>
  </data>
  <data name="cbLanguage.Items" xml:space="preserve">
    <value>Portugiesisch (Brasilien]</value>
  </data>
  <data name="cbLanguage.Items1" xml:space="preserve">
    <value>Amerikanisches Englisch]</value>
  </data>
  <data name="cbLanguage.Items2" xml:space="preserve">
    <value>Spanisch [Spanien]</value>
  </data>
  <data name="cbLanguage.Items3" xml:space="preserve">
    <value>Koreanisch</value>
  </data>
  <data name="grbLanguage.Text" xml:space="preserve">
    <value>Standardsprache auswählen:</value>
  </data>
  <data name="tabSettingsLanguage.Text" xml:space="preserve">
    <value>Sprachen</value>
  </data>
  <data name="lblLOG.Text" xml:space="preserve">
    <value>Protokollebene:</value>
  </data>
  <data name="chkManagerLogFile.Text" xml:space="preserve">
    <value>In Datei aufnehmen</value>
  </data>
  <data name="chkManagerLogWindow.Text" xml:space="preserve">
    <value>Registrierung für Fenster</value>
  </data>
  <data name="chkManagerLogDebugConsole.Text" xml:space="preserve">
    <value>Protokoll für die Debug-Konsole</value>
  </data>
  <data name="chkManagerLogSystemConsole.Text" xml:space="preserve">
    <value>Registrierung für die Systemkonsole</value>
  </data>
  <data name="cbLevelLog.Items" xml:space="preserve">
    <value>Informativ</value>
  </data>
  <data name="cbLevelLog.Items1" xml:space="preserve">
    <value>Zusammengefasst</value>
  </data>
  <data name="cbLevelLog.Items2" xml:space="preserve">
    <value>Vollständig</value>
  </data>
  <data name="grbLog.Text" xml:space="preserve">
    <value>Aufzeichnung</value>
  </data>
  <data name="tabSettingsLog.Text" xml:space="preserve">
    <value>Aufzeichnung</value>
  </data>
  <data name="btnRestore.Text" xml:space="preserve">
    <value>Einstellungen zurücksetzen</value>
  </data>
  <data name="fbd.Description" xml:space="preserve">
    <value>Verzeichnis erstellen oder auswählen:</value>
  </data>
  <data name="ofdDolphin.Filter" xml:space="preserve">
    <value>Delphin-Emulator|dolphin.exe</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="chkWelcome.Text" xml:space="preserve">
    <value>Begrüßungsbildschirm beim Programmstart deaktivieren (Splashscreen)</value>
  </data>
</root>