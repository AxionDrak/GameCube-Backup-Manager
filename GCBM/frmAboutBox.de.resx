<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="labelProductName.Text" xml:space="preserve">
    <value>Produktname</value>
  </data>
  <data name="labelVersion.Text" xml:space="preserve">
    <value>Ausführung</value>
  </data>
  <data name="labelCopyright.Text" xml:space="preserve">
    <value>Urheberrechte ©</value>
  </data>
  <data name="labelCompanyName.Text" xml:space="preserve">
    <value>Name der Firma</value>
  </data>
  <data name="textBoxDescription.Text" xml:space="preserve">
    <value>Beschreibung</value>
  </data>
  <data name="lblAboutCurrentLanguage.Text" xml:space="preserve">
    <value>Aktuelle Sprache:</value>
  </data>
  <data name="lblAboutTranslator.Text" xml:space="preserve">
    <value>Übersetzt von:</value>
  </data>
  <data name="lblAboutProgramName.Text" xml:space="preserve">
    <value>GameCube-Backup-Manager</value>
  </data>
  <data name="tbTranslator.Text" xml:space="preserve">
    <value>Übersetzung</value>
  </data>
  <data name="rtbAboutGameTDB.Text" xml:space="preserve">
    <value>GameTDB ist eine kollaborative Spieledatenbank, an der jeder etwas beitragen und die er in jedem Spielprojekt verwenden kann.

Auf der Website können Sie die Datenbank durchsuchen, herunterladen und dazu beitragen, indem Sie Spielinformationen hinzufügen und Skins hochladen.

Auf Ihrer Wii oder Ihrem Computer können Sie mit GameTDB Folgendes tun:

- Zeigen Sie passende Titel für Ihr Spiel an ("Wii Sports" statt "SPORTS PACK FOR REVOLUTION"), ohne sich jemals umbenennen zu müssen.

- Zeigen Sie das Cover an, das zu Ihrer Region passt.

- zusätzliche Informationen zu Ihren Spielen anzeigen (Spieler, Online-Modi, Zubehör, Publisher, Entwickler...).

- Wenn Sie eine große Bibliothek haben, können Sie Spiele zum Beispiel nach Anzahl der Spieler kalt sortieren, um Ihre Multiplayer-Titel schnell zu gruppieren.

- Suchen Sie nach GameCube- und Wii-Spielen nach Herausgeber, Entwickler, die einer bestimmten Bewertung entsprechen oder in einem bestimmten Jahr veröffentlicht wurden.</value>
  </data>
  <data name="rtbAboutThanks.Text" xml:space="preserve">
    <value>Vielen Dank an die folgenden Personen für das Testen, Übersetzen und allgemeine Hilfe während der Entwicklung:

- Valclark Junior - Testen / Benutzererfahrung
- Dolphin Emulator Team - GameCube / Wii / RVZ-Informationen
- Wim
- WIT (Wiimms ISO Tools)
- Wii-Gebräu
- DDinghoya - offizieller Koreanisch-Übersetzer

Zusätzlich zu allen, die in der Game-Preservation-Community involviert sind.</value>
  </data>
  <data name="tbThanks.Text" xml:space="preserve">
    <value>Vielen Dank</value>
  </data>
  <data name="rtbAboutDonations.Text" xml:space="preserve">
    <value>GameCube Backup Manager ist kostenlose Software.

Es wurde und wird viel Mühe darauf verwendet, es so stabil und funktionsreich wie möglich zu machen. Wenn Sie es hilfreich finden und Ihre Wertschätzung zeigen möchten, können Sie mir gerne ein oder zwei Dollar dalassen. Jedes erhaltene Geld wird mir sehr helfen!

Sie können Spenden auch per PayPal an laetemn@gmail.com senden, wenn der obige Link für Sie nicht funktioniert.

Vergiss nicht, mir eine E-Mail zu schicken, damit ich mich bei dir bedanken kann.</value>
  </data>
  <data name="tbDonate.Text" xml:space="preserve">
    <value>Spenden</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Um...</value>
  </data>
</root>