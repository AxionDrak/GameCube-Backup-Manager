<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="rtbAboutGameTDB.Text" xml:space="preserve">
    <value>GameTDB は、誰でも貢献でき、あらゆるゲーム プロジェクトで誰でも使用できる共同ゲーム データベースです。

Web サイトでは、データベースを参照してダウンロードし、ゲーム情報を追加してスキンをアップロードすることでデータベースに貢献できます。

Wii またはコンピューターで、GameTDB を使用して次のことができます。

- 自分の名前を変更することなく、ゲームに適したタイトルを表示します (「SPORTS PACK FOR REVOLUTION」ではなく「Wii Sports」)。

- お住まいの地域に合ったカバー アートを表示します。

- ゲームに関する追加情報を表示します (プレーヤー、オンライン モード、アクセサリ、発行元、開発者など)。

- 大規模なライブラリがある場合は、マルチプレイヤー タイトルをすばやくグループ化するために、ゲームをプレイヤー数などでコールド ソートします。

- 特定のレーティングに一致する、または特定の年にリリースされたゲームキューブおよび Wii ゲームをパブリッシャー、開発者別に検索します。</value>
  </data>
  <data name="labelProductName.Text" xml:space="preserve">
    <value>商品名</value>
  </data>
  <data name="labelVersion.Text" xml:space="preserve">
    <value>バージョン</value>
  </data>
  <data name="labelCopyright.Text" xml:space="preserve">
    <value>著作権</value>
  </data>
  <data name="labelCompanyName.Text" xml:space="preserve">
    <value>会社名</value>
  </data>
  <data name="textBoxDescription.Text" xml:space="preserve">
    <value>説明</value>
  </data>
  <data name="lblAboutCurrentLanguage.Text" xml:space="preserve">
    <value>現在の言語:</value>
  </data>
  <data name="lblAboutTranslator.Text" xml:space="preserve">
    <value>によって翻訳された：</value>
  </data>
  <data name="lblAboutProgramName.Text" xml:space="preserve">
    <value>ゲームキューブ バックアップ マネージャー</value>
  </data>
  <data name="tbTranslator.Text" xml:space="preserve">
    <value>翻訳</value>
  </data>
  <data name="rtbAboutThanks.Text" xml:space="preserve">
    <value>開発中のテスト、翻訳、および一般的な支援について、次の方々に感謝します。

- Valclark Junior - テスト/ユーザー エクスペリエンス
- Dolphin Emulator Team - ゲームキューブ / Wii / RVZ 情報
- ウィーム
- WIT (Wiimms ISO ツール)
- Wiiブリュー
- DDinghoya - 公式韓国語翻訳者

ゲーム保存コミュニティに関わるすべての人に加えて。</value>
  </data>
  <data name="tbThanks.Text" xml:space="preserve">
    <value>ありがとう</value>
  </data>
  <data name="rtbAboutDonations.Text" xml:space="preserve">
    <value>GameCube Backup Manager はフリー ソフトウェアです。

可能な限り安定して機能豊富にするために、多くの努力が払われてきました。お役に立ち、感謝の気持ちを表したい場合は、お気軽に 1 ドルか 2 ドルお支払いください。受け取ったお金は私を大いに助けてくれます！

上記のリンクが機能しない場合は、PayPal 経由で laetemn@gmail.com に寄付を送ることもできます。

お礼のメールを忘れずに送ってください。</value>
  </data>
  <data name="tbDonate.Text" xml:space="preserve">
    <value>寄付</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>約...</value>
  </data>
</root>