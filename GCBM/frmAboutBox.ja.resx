<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="labelProductName.Text" xml:space="preserve">
    <value>製品名</value>
  </data>
  <data name="labelVersion.Text" xml:space="preserve">
    <value>バージョン</value>
  </data>
  <data name="labelCopyright.Text" xml:space="preserve">
    <value>著作権について</value>
  </data>
  <data name="labelCompanyName.Text" xml:space="preserve">
    <value>会社名</value>
  </data>
  <data name="textBoxDescription.Text" xml:space="preserve">
    <value>商品説明</value>
  </data>
  <data name="lblAboutCurrentLanguage.Text" xml:space="preserve">
    <value>現在の言語。</value>
  </data>
  <data name="lblAboutTranslator.Text" xml:space="preserve">
    <value>翻訳者</value>
  </data>
  <data name="lblAboutProgramName.Text" xml:space="preserve">
    <value>ゲームキューブバックアップマネージャー</value>
  </data>
  <data name="tbTranslator.Text" xml:space="preserve">
    <value>翻訳</value>
  </data>
  <data name="rtbAboutGameTDB.Text" xml:space="preserve">
    <value>GameTDBは、誰もが貢献でき、誰もがあらゆるゲームプロジェクトで利用できる共同ゲームデータベースです。

ウェブサイトでは、データベースを閲覧し、ダウンロードし、ゲーム情報を追加したりスキンをアップロードすることで貢献することが出来ます。

Wiiやコンピュータでは、GameTDBを使って次のことができます。

- 自分のゲームに適切なタイトルを表示する（『SPORTS PACK FOR REVOLUTION』ではなく『Wii Sports』）、自分で名前を変更する必要はありません。

- あなたのお住いの地域に合ったカバーアートを表示する。

- ゲームに関する追加情報（プレイヤー、オンラインモード、アクセサリー、パブリッシャー、開発者など...）を表示することができます。

- ライブラリが膨大な場合、ゲームをプレイヤーの数でソートして、マルチプレイヤーゲームをすばやくグループ化することができます。

- ゲームキューブやWiiのゲームを、出版社や開発元、特定のレーティング、または特定の年に発売されたものから検索することができます。</value>
  </data>
  <data name="rtbAboutThanks.Text" xml:space="preserve">
    <value>開発中にテスト、翻訳、一般的な手助けをしてくれた以下の方々に感謝します。

- Valclark Junior - テスト/ユーザーエクスペリエンス
- ドルフィンエミュレータチーム - ゲームキューブ / Wii / RVZ情報
- Wiim
- WIT (Wiimms ISO Tools)
- Wii ブリュー
- DDinghoya - 韓国語翻訳者

ゲーム保存コミュニティに関わるすべての人に加え</value>
  </data>
  <data name="tbThanks.Text" xml:space="preserve">
    <value>感謝</value>
  </data>
  <data name="rtbAboutDonations.Text" xml:space="preserve">
    <value>ゲームキューブバックアップマネージャーはフリーソフトです。

可能な限り安定し、機能豊富なものにするために、多くの努力が払われてきましたし、今後もそうするつもりです。もし、あなたがこのソフトが便利だと感じ、感謝の気持ちを示したくて寄付をしたいのであれば、遠慮なく1ドルか2ドルを私に寄付してください。少額の寄付でも私の助けになります！

上記のリンクがうまくいかない場合は、PayPalでlaetemn@gmail.comに寄付を送ることもできます。

お礼のメールも忘れずに。</value>
  </data>
  <data name="tbDonate.Text" xml:space="preserve">
    <value>寄付金について</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>について...</value>
  </data>
</root>
