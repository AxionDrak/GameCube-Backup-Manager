<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="labelProductName.Text" xml:space="preserve">
    <value>产品的名称</value>
  </data>
  <data name="labelVersion.Text" xml:space="preserve">
    <value>版本</value>
  </data>
  <data name="labelCopyright.Text" xml:space="preserve">
    <value>版权声明</value>
  </data>
  <data name="labelCompanyName.Text" xml:space="preserve">
    <value>公司名称</value>
  </data>
  <data name="textBoxDescription.Text" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="lblAboutCurrentLanguage.Text" xml:space="preserve">
    <value>目前的语言。</value>
  </data>
  <data name="lblAboutTranslator.Text" xml:space="preserve">
    <value>译者。</value>
  </data>
  <data name="lblAboutProgramName.Text" xml:space="preserve">
    <value>游戏机备份管理器</value>
  </data>
  <data name="tbTranslator.Text" xml:space="preserve">
    <value>翻译</value>
  </data>
  <data name="rtbAboutGameTDB.Text" xml:space="preserve">
    <value>GameTDB是一个协作性的游戏数据库，任何人都可以贡献，任何人都可以在任何游戏项目中使用。

在网站上，你可以浏览数据库，下载它，并通过添加游戏信息和上传皮肤来贡献它。

在你的Wii或你的电脑上，你可以使用GameTDB来做以下事情。

- 为你的游戏显示适当的标题（"Wii Sports "而不是 "SPORTS PACK FOR REVOLUTION"），而不必再重新命名。

- 显示符合你所在地区的封面设计。

- 显示关于你的游戏的额外信息（玩家、在线模式、附件、出版商、开发商......）。

- 如果你有一个大的图书馆，你可以对游戏进行冷分类，例如，按玩家人数来快速分组你的多人游戏。

- 搜索GameCube和Wii游戏，按出版商、开发商、符合特定等级或在某年发行的游戏。</value>
  </data>
  <data name="rtbAboutThanks.Text" xml:space="preserve">
    <value>感谢以下人员在开发过程中的测试、翻译和一般帮助。

- Valclark Junior - 测试/用户体验
- 海豚模拟器团队 - GameCube / Wii / RVZ信息
- Wiim
- WIT (Wiimms ISO Tools)
- WII Brew
- DDinghoya - 官方韩语翻译员

除了参与游戏保存社区的每个人之外。</value>
  </data>
  <data name="tbThanks.Text" xml:space="preserve">
    <value>谢谢</value>
  </data>
  <data name="rtbAboutDonations.Text" xml:space="preserve">
    <value>GameCube备份管理器是免费软件。

为了使它尽可能的稳定和功能丰富，我们已经并将会投入大量的精力。如果你觉得它有帮助，并想表达你的谢意，请随时给我一两美元。任何收到的钱都会对我有很大的帮助!

如果上面的链接对你不起作用，你也可以通过PayPal把捐款送到laetemn@gmail.com。

别忘了给我发一封邮件，以便我感谢你。</value>
  </data>
  <data name="tbDonate.Text" xml:space="preserve">
    <value>捐献</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>关于...</value>
  </data>
</root>