<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="labelCompanyName.Text" xml:space="preserve">
    <value>Name des Unternehmens</value>
  </data>
  <data name="labelProductName.Text" xml:space="preserve">
    <value>Name des Produkts</value>
  </data>
  <data name="labelVersion.Text" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="labelCopyright.Text" xml:space="preserve">
    <value>Urheberrecht</value>
  </data>
  <data name="textBoxDescription.Text" xml:space="preserve">
    <value>Beschreibung</value>
  </data>
  <data name="lblAboutCurrentLanguage.Text" xml:space="preserve">
    <value>Aktuelle Sprache:</value>
  </data>
  <data name="lblAboutTranslator.Text" xml:space="preserve">
    <value>Übersetzer:</value>
  </data>
  <data name="lblAboutProgramName.Text" xml:space="preserve">
    <value>GameCube Backup Manager</value>
  </data>
  <data name="tbTranslator.Text" xml:space="preserve">
    <value>Übersetzung</value>
  </data>
  <data name="rtbAboutGameTDB.Text" xml:space="preserve">
    <value>GameTDB ist eine kollaborative Spieledatenbank, zu der jeder beitragen und die jeder in jedem Spielprojekt verwenden kann.

Auf der Website können Sie die Datenbank durchsuchen, sie herunterladen und durch Hinzufügen von Spielinformationen und Hochladen von Skins dazu beitragen.

Auf Ihrer Wii oder Ihrem Computer können Sie mit GameTDB Folgendes tun:

- passende Titel für Ihr Spiel anzeigen ("Wii Sports" statt "SPORTS PACK FOR REVOLUTION"), ohne dass Sie sich umbenennen müssen.

- das zu Ihrer Region passende Cover anzeigen lassen.

- zusätzliche Informationen über Ihre Spiele anzeigen (Spieler, Online-Modi, Zubehör, Herausgeber, Entwickler...).

- Wenn Sie eine große Bibliothek haben, können Sie die Spiele z. B. nach der Anzahl der Spieler sortieren, um Ihre Multiplayer-Titel schnell zu gruppieren.

- Suche nach GameCube- und Wii-Spielen, nach Verleger, Entwickler, mit einer bestimmten Bewertung oder aus einem bestimmten Jahr.</value>
  </data>
  <data name="rtbAboutThanks.Text" xml:space="preserve">
    <value>Vielen Dank an die folgenden Personen für das Testen, Übersetzen und die allgemeine Hilfe während der Entwicklung:

- Valclark Junior - Testen / Benutzererfahrung
- Dolphin Emulator Team - GameCube / Wii / RVZ Informationen
- Wiim
- WIT (Wiimms ISO-Werkzeuge)
- Wii Gebräu
- DDinghoya - offizieller Übersetzer der koreanischen Sprache

Zusätzlich zu allen, die sich für die Erhaltung von Spielen einsetzen.</value>
  </data>
  <data name="tbThanks.Text" xml:space="preserve">
    <value>Danke</value>
  </data>
  <data name="rtbAboutDonations.Text" xml:space="preserve">
    <value>GameCube Backup Manager ist eine kostenlose Software.

Es wurden und werden viele Anstrengungen unternommen, um sie so stabil und funktionsreich wie möglich zu machen. Wenn Sie es hilfreich finden und Ihre Wertschätzung zeigen wollen, können Sie mir gerne ein oder zwei Dollar zukommen lassen. Jedes Geld, das ich erhalte, wird mir sehr helfen!

Sie können auch über PayPal an laetemn@gmail.com spenden, falls der obige Link nicht funktioniert.

Vergessen Sie nicht, mir eine E-Mail zu schicken, damit ich mich bei Ihnen bedanken kann.</value>
  </data>
  <data name="tbDonate.Text" xml:space="preserve">
    <value>Spenden</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Über...</value>
  </data>
</root>