<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="labelProductName.Text" xml:space="preserve">
    <value>Nom du produit</value>
  </data>
  <data name="labelVersion.Text" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="labelCopyright.Text" xml:space="preserve">
    <value>Copyright</value>
  </data>
  <data name="labelCompanyName.Text" xml:space="preserve">
    <value>Nom de la société</value>
  </data>
  <data name="textBoxDescription.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="lblAboutCurrentLanguage.Text" xml:space="preserve">
    <value>Langue actuelle :</value>
  </data>
  <data name="lblAboutTranslator.Text" xml:space="preserve">
    <value>Traducteur :</value>
  </data>
  <data name="lblAboutProgramName.Text" xml:space="preserve">
    <value>Gestionnaire de sauvegarde GameCube</value>
  </data>
  <data name="tbTranslator.Text" xml:space="preserve">
    <value>Traduction</value>
  </data>
  <data name="rtbAboutGameTDB.Text" xml:space="preserve">
    <value>GameTDB est une base de données collaborative de jeux à laquelle tout le monde peut contribuer et que tout le monde peut utiliser dans tout projet de jeu.

Sur le site web, vous pouvez parcourir la base de données, la télécharger et y contribuer en ajoutant des informations sur le jeu et en téléchargeant des skins.

Sur votre Wii ou votre ordinateur, vous pouvez utiliser GameTDB pour faire ce qui suit :

- afficher des titres appropriés pour votre jeu ("Wii Sports" au lieu de "SPORTS PACK FOR REVOLUTION"), sans jamais avoir à vous renommer.

- afficher la jaquette correspondant à votre région.

- afficher des informations supplémentaires sur vos jeux (joueurs, modes en ligne, accessoires, éditeur, développeur...).

- si vous avez une grande bibliothèque, vous pouvez trier les jeux à froid, par exemple, par nombre de joueurs pour regrouper rapidement vos titres multijoueurs.

- rechercher des jeux GameCube et Wii, par éditeur, développeur, correspondant à un certain classement ou sortis une certaine année.</value>
  </data>
  <data name="rtbAboutThanks.Text" xml:space="preserve">
    <value>Merci aux personnes suivantes pour les tests, les traductions et l'aide générale pendant le développement :

- Valclark Junior - Test / Expérience utilisateur
- Dolphin Emulator Team - Informations GameCube / Wii / RVZ
- Wiim
- WIT (Wiimms ISO Tools)
- Wii Brew
- DDinghoya - traducteur officiel en langue coréenne

En plus de toutes les personnes impliquées dans la communauté de préservation des jeux.</value>
  </data>
  <data name="tbThanks.Text" xml:space="preserve">
    <value>Merci</value>
  </data>
  <data name="rtbAboutDonations.Text" xml:space="preserve">
    <value>GameCube Backup Manager est un logiciel gratuit.

Beaucoup d'efforts ont été et seront déployés pour le rendre aussi stable et riche en fonctionnalités que possible. Si vous le trouvez utile et voulez montrer votre appréciation, n'hésitez pas à m'envoyer un dollar ou deux. Tout argent reçu me sera d'une grande aide !

Vous pouvez également envoyer des dons à laetemn@gmail.com via PayPal si le lien ci-dessus ne fonctionne pas pour vous.

N'oubliez pas de m'envoyer un courriel pour que je puisse vous remercier.</value>
  </data>
  <data name="tbDonate.Text" xml:space="preserve">
    <value>Dons</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>A propos de...</value>
  </data>
</root>