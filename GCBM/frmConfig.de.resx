<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cbGeneralFileSize.Items3" xml:space="preserve">
    <value>Gigabyte</value>
  </data>
  <data name="chkManagerLogDebugConsole.Text" xml:space="preserve">
    <value>Protokoll für die Debug-Konsole</value>
  </data>
  <data name="chkCoverEnableTransfer.Text" xml:space="preserve">
    <value>Übertragung von Skins zwischen Geräten ermöglichen</value>
  </data>
  <data name="chkManagerLogFile.Text" xml:space="preserve">
    <value>Datensatz zur Datei</value>
  </data>
  <data name="cbVerificationInterval.Items1" xml:space="preserve">
    <value>10 Minuten</value>
  </data>
  <data name="cbVerificationInterval.Items6" xml:space="preserve">
    <value>3 Stunden</value>
  </data>
  <data name="cbVerificationInterval.Items4" xml:space="preserve">
    <value>1 Stunde</value>
  </data>
  <data name="cbVerificationInterval.Items5" xml:space="preserve">
    <value>2 Stunden</value>
  </data>
  <data name="chkCoverRecursiveSearch.Text" xml:space="preserve">
    <value>Rekursive Skin-Suche verwenden (Suche in allen Regionen)</value>
  </data>
  <data name="chkGeneralExtractBZip2.Text" xml:space="preserve">
    <value>BZip2-Dateien (*.bz;*.bzip2)</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>Speicherort des Ordners:</value>
  </data>
  <data name="chkCoverSynchronizeDelete.Text" xml:space="preserve">
    <value>Skins für Spiele löschen, die nicht auf der Liste stehen</value>
  </data>
  <data name="lblServerProxy.Text" xml:space="preserve">
    <value>Proxy-Server:</value>
  </data>
  <data name="cbTitleLanguage.Items5" xml:space="preserve">
    <value>Niederländisch</value>
  </data>
  <data name="label17.Text" xml:space="preserve">
    <value>Kopiert eine oder mehrere Dateien von einem Ort (Quelle) zu einem anderen (Ziel). Die Datei wird nicht komprimiert, ist nicht Teil eines Containers und es werden keine Mülldaten entfernt.</value>
  </data>
  <data name="rbGameXmlName.Text" xml:space="preserve">
    <value>Handelsname für das Spiel über wiitdb.xml verwenden (EMPFOHLEN! - erfordert die Datei wiitdb.xml)</value>
  </data>
  <data name="cbTitleLanguage.Items11" xml:space="preserve">
    <value>Vereinfachtes Chinesisch</value>
  </data>
  <data name="cbTitleLanguage.Items10" xml:space="preserve">
    <value>Traditionelles Chinesisch</value>
  </data>
  <data name="chkGeneralExtract7z.Text" xml:space="preserve">
    <value>7Zip-Dateien (*.7z;*.7zip)</value>
  </data>
  <data name="grbDolphinFolder.Text" xml:space="preserve">
    <value>Pfad zum Emulator</value>
  </data>
  <data name="grbLanguage.Text" xml:space="preserve">
    <value>Wählen Sie die Standardsprache:</value>
  </data>
  <data name="tabSettingsLanguage.Text" xml:space="preserve">
    <value>Sprachen</value>
  </data>
  <data name="grbLog.Text" xml:space="preserve">
    <value>Datensatz</value>
  </data>
  <data name="cbAdjustNamingStyle.Items" xml:space="preserve">
    <value>Titel [Game Code]</value>
  </data>
  <data name="grbDolphinVideo.Text" xml:space="preserve">
    <value>Video</value>
  </data>
  <data name="btnCancel.Text" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="chkMultipleInstances.Text" xml:space="preserve">
    <value>Ermöglicht die Ausführung mehrerer Instanzen des Programms</value>
  </data>
  <data name="fbd.Description" xml:space="preserve">
    <value>Erstellen oder wählen Sie ein Verzeichnis:</value>
  </data>
  <data name="grbUpdate.Text" xml:space="preserve">
    <value>Einstellungen aktualisieren</value>
  </data>
  <data name="chkGeneralScrubFlushSD.Text" xml:space="preserve">
    <value>Löschen von Dateipuffern, so dass die SD-Karte fast sofort ausgeworfen werden kann</value>
  </data>
  <data name="rbGameInternalName.Text" xml:space="preserve">
    <value>Interne Produktionsbezeichnung für das Spiel verwenden (75% unterstützt)</value>
  </data>
  <data name="cbTitleLanguage.Items1" xml:space="preserve">
    <value>Französisch</value>
  </data>
  <data name="chkGameTitle.Text" xml:space="preserve">
    <value>GameTDB verwenden (titles.txt)</value>
  </data>
  <data name="chkGeneralExtractSplitFile.Text" xml:space="preserve">
    <value>Aufgeteilte Dateien (*.001)</value>
  </data>
  <data name="rbGeneralDiscDelete.Text" xml:space="preserve">
    <value>Nur den Ordner von Laufwerk 1 behalten und den Ordner von Laufwerk 2 löschen (experimentell)</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>Speicherort des Ordners:</value>
  </data>
  <data name="cbVerificationInterval.Items3" xml:space="preserve">
    <value>30 Minuten</value>
  </data>
  <data name="cbGeneralFileSize.Items" xml:space="preserve">
    <value>Automatisch</value>
  </data>
  <data name="lblPass.Text" xml:space="preserve">
    <value>Kennwort:</value>
  </data>
  <data name="chkUpdateServerProxy.Text" xml:space="preserve">
    <value>Proxyserver verwenden</value>
  </data>
  <data name="lblFormat.Text" xml:space="preserve">
    <value>Format:</value>
  </data>
  <data name="cbTitleLanguage.Items8" xml:space="preserve">
    <value>Russisch</value>
  </data>
  <data name="btnApply.Text" xml:space="preserve">
    <value>Bewerbung</value>
  </data>
  <data name="grbTransferSystem.Text" xml:space="preserve">
    <value>Zu verwendendes Transfersystem</value>
  </data>
  <data name="cbTitleLanguage.Items2" xml:space="preserve">
    <value>Deutsch</value>
  </data>
  <data name="lblLOG.Text" xml:space="preserve">
    <value>Log Level:</value>
  </data>
  <data name="grbGeneralDiverse.Text" xml:space="preserve">
    <value>Mehrere</value>
  </data>
  <data name="grbTitleFileLocation.Text" xml:space="preserve">
    <value>Speicherort der Datei</value>
  </data>
  <data name="chkUpdateFileLog.Text" xml:space="preserve">
    <value>Aktualisierungen an die Protokolldatei anhängen</value>
  </data>
  <data name="chkStartWindowMaximized.Text" xml:space="preserve">
    <value>Startfenster maximiert</value>
  </data>
  <data name="lblUpdateInterval.Text" xml:space="preserve">
    <value>Intervall prüfen:</value>
  </data>
  <data name="grbTitleLanguage.Text" xml:space="preserve">
    <value>Sprache des Titels</value>
  </data>
  <data name="lblLanguage.Text" xml:space="preserve">
    <value>Sprache:</value>
  </data>
  <data name="chkNotify.Text" xml:space="preserve">
    <value>Taskleistenbenachrichtigungen aktivieren (Standardbenachrichtigungen werden weiterhin normal angezeigt)</value>
  </data>
  <data name="chkScreensaver.Text" xml:space="preserve">
    <value>Deaktivieren Sie den Bildschirmschoner (Screensaver)</value>
  </data>
  <data name="grbDolphinAudio.Text" xml:space="preserve">
    <value>Audio</value>
  </data>
  <data name="lblNomenclature.Text" xml:space="preserve">
    <value>Stil der Namensgebung:</value>
  </data>
  <data name="lblTimeInterval.Text" xml:space="preserve">
    <value>HINWEIS: Die Einstellung des Zeitintervalls wird erst nach einem Neustart des Programms wirksam.</value>
  </data>
  <data name="chkGeneralExtractNwb.Text" xml:space="preserve">
    <value>NWB-Dateien (*.nwb)</value>
  </data>
  <data name="cbAdjustNamingStyle.Items1" xml:space="preserve">
    <value>[Spielcode]</value>
  </data>
  <data name="label20.Text" xml:space="preserve">
    <value>Ähnlich wie XCopy, mit dem Unterschied, dass die in den Dateien vorhandenen Mülldaten (Garbage) bereinigt werden. Die ursprüngliche Dateigröße wird beibehalten. Mülldaten werden entfernt, während die Integrität der anderen Daten erhalten bleibt.</value>
  </data>
  <data name="label31.Text" xml:space="preserve">
    <value>Entfernt unnötige Daten (Garbage), indem sie durch einen konstanten Byte-Wert (0xff oder 0x00) ersetzt werden. Die Datei hat eine geringere Größe, die Datenintegrität bleibt jedoch erhalten.</value>
  </data>
  <data name="tabCoverDisc.Text" xml:space="preserve">
    <value>Scheibe</value>
  </data>
  <data name="lblCommentsScrubCopy.Text" xml:space="preserve">
    <value>Für die Scrub-Methode wird immer der Standard "Titel [Game Code]" verwendet, der auf dem internen Namen (vom Entwickler definiert) basiert. Im Scrub-Kopiermodus werden die Datenträger 1 und 2 immer in getrennten Ordnern gespeichert, außer in bestimmten Fällen, in denen die Erkennungsmethode gemeinsame, vom Entwickler vergebene Namen identifizieren kann. In diesem Fall werden die Datenträger 1 und 2 im selben Ordner gespeichert.</value>
  </data>
  <data name="cbTitleLanguage.Items6" xml:space="preserve">
    <value>Portugiesisch</value>
  </data>
  <data name="grbGeneralFileSize.Text" xml:space="preserve">
    <value>Größe anzeigen</value>
  </data>
  <data name="grbGeneralFiles.Text" xml:space="preserve">
    <value>Dateien</value>
  </data>
  <data name="tabSettingsLog.Text" xml:space="preserve">
    <value>Datensatz</value>
  </data>
  <data name="cbLevelLog.Items2" xml:space="preserve">
    <value>Vollständig</value>
  </data>
  <data name="chkUpdateVerifyStart.Text" xml:space="preserve">
    <value>Beim Starten auf Aktualisierungen prüfen</value>
  </data>
  <data name="cbTitleLanguage.Items7" xml:space="preserve">
    <value>Japanisch</value>
  </data>
  <data name="chkManagerLogSystemConsole.Text" xml:space="preserve">
    <value>Registrierung für die Systemkonsole</value>
  </data>
  <data name="cbLevelLog.Items" xml:space="preserve">
    <value>Informativ</value>
  </data>
  <data name="tabCoverFull.Text" xml:space="preserve">
    <value>Vollständig</value>
  </data>
  <data name="grbDolphin.Text" xml:space="preserve">
    <value>Emulator konfigurieren</value>
  </data>
  <data name="grpCoversSynchronize.Text" xml:space="preserve">
    <value>Synchronisieren</value>
  </data>
  <data name="lblCommentsExactCopy.Text" xml:space="preserve">
    <value>Der Benennungsstil funktioniert derzeit nur bei exakten Kopien von Dateien (1:1) und kann sowohl den internen Namen als auch den kommerziellen Namen (über wiitdb.xml) verwenden. Diese Option kann vom Benutzer auf der Registerkarte "Titel" konfiguriert werden. Im Modus der exakten Kopie (1:1) werden die Datenträger 1 und 2 immer im selben Ordner gespeichert.</value>
  </data>
  <data name="label35.Text" xml:space="preserve">
    <value>Speicherort des Ordners:</value>
  </data>
  <data name="grbCoverTransfer.Text" xml:space="preserve">
    <value>USB-Ladegerät einrichten (Abdeckungen übertragen -&gt; Ziel)</value>
  </data>
  <data name="chkManagerLogWindow.Text" xml:space="preserve">
    <value>Anmeldung für Fenster</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>Speicherort des Ordners:</value>
  </data>
  <data name="lblComments.Text" xml:space="preserve">
    <value>KOMMENTARE:</value>
  </data>
  <data name="tabSettingsNomenclature.Text" xml:space="preserve">
    <value>Nomenklatur</value>
  </data>
  <data name="grpTitlesCoverFolder.Text" xml:space="preserve">
    <value>Ordner "Covers" (Cache -&gt; Origin)</value>
  </data>
  <data name="grbGeneralPartitions.Text" xml:space="preserve">
    <value>Spielverzeichnisse anpassen</value>
  </data>
  <data name="tabSettingsTitle.Text" xml:space="preserve">
    <value>Titel</value>
  </data>
  <data name="cbGeneralFileSize.Items2" xml:space="preserve">
    <value>Megabyte</value>
  </data>
  <data name="grbTitleDiverse.Text" xml:space="preserve">
    <value>Sonstiges (Neustart des Programms erforderlich, um wirksam zu werden)</value>
  </data>
  <data name="lblLanguageComments.Text" xml:space="preserve">
    <value>HINWEIS: Die Änderung der Spracheinstellung wird erst nach einem Neustart des Programms wirksam.</value>
  </data>
  <data name="cbVerificationInterval.Items2" xml:space="preserve">
    <value>15 Minuten</value>
  </data>
  <data name="cbLevelLog.Items1" xml:space="preserve">
    <value>Zusammengefasst</value>
  </data>
  <data name="chkGeneralTemporaryBuffer.Text" xml:space="preserve">
    <value>Übertragungen im temporären Speicher (Puffer) verwenden</value>
  </data>
  <data name="cbTitleLanguage.Items4" xml:space="preserve">
    <value>Italienisch</value>
  </data>
  <data name="chkLoadDatabase.Text" xml:space="preserve">
    <value>Datenbank beim Programmstart laden (erhöht die Programmstartzeit)</value>
  </data>
  <data name="tabSettingsSeveral.Text" xml:space="preserve">
    <value>Mehrere</value>
  </data>
  <data name="cbVerificationInterval.Items" xml:space="preserve">
    <value>5 Minuten</value>
  </data>
  <data name="chkGeneralExtractRar.Text" xml:space="preserve">
    <value>RAR-Dateien (*.rar)</value>
  </data>
  <data name="rbGeneralDiscClean.Text" xml:space="preserve">
    <value>Alle Ordner für Laufwerk 1 und Laufwerk 2 getrennt halten (Standard)</value>
  </data>
  <data name="btnRestore.Text" xml:space="preserve">
    <value>Einstellungen wiederherstellen</value>
  </data>
  <data name="tabSettingsTransfer.Text" xml:space="preserve">
    <value>Spiel übertragen</value>
  </data>
  <data name="chkNetVerify.Text" xml:space="preserve">
    <value>Prüfen Sie die Internetverbindung beim Programmstart</value>
  </data>
  <data name="chkGameTitleCustom.Text" xml:space="preserve">
    <value>Benutzerdefinierte Titel verwenden (custom-titles.txt)</value>
  </data>
  <data name="tabSettingsUpdates.Text" xml:space="preserve">
    <value>Aktualisierungen</value>
  </data>
  <data name="rbTransferSystemXCopy.Text" xml:space="preserve">
    <value>XCopy (Standard)</value>
  </data>
  <data name="label28.Text" xml:space="preserve">
    <value>FST (FileSystem Table) ist ein in ein Verzeichnis extrahiertes Dateisystem, das alle realen und virtuellen Dateien eines Archivs enthält. Nintendont verwendet die FST-Dateien, um ein internes virtuelles ISO-Image zu erstellen und das Spiel von diesem virtuellen ISO zu laden.</value>
  </data>
  <data name="chkGeneralRecursiva.Text" xml:space="preserve">
    <value>Verzeichnisse rekursiv durchsuchen (nur für das Fenster "Dateien (Quelle)")</value>
  </data>
  <data name="chkUpdateBetaChannel.Text" xml:space="preserve">
    <value>Umschalten auf BETA-Kanal-Updates</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="cbTitleLanguage.Items" xml:space="preserve">
    <value>Englisch</value>
  </data>
  <data name="chkGeneralExtractZip.Text" xml:space="preserve">
    <value>Zip-Dateien (*.zip)</value>
  </data>
  <data name="lblAlignment.Text" xml:space="preserve">
    <value>Ausrichtung:</value>
  </data>
  <data name="chkGeneralSHA1.Text" xml:space="preserve">
    <value>Überprüfung der SHA-1-Signatur bei Übertragungen</value>
  </data>
  <data name="lblGeneralExtract.Text" xml:space="preserve">
    <value>Extrahieren Sie, wenn nötig.</value>
  </data>
  <data name="ofdDolphin.Filter" xml:space="preserve">
    <value>Delphin-Emulator|dolphin.exe</value>
  </data>
  <data name="rbDSPHLE.Text" xml:space="preserve">
    <value>DSP HLE (Standard)</value>
  </data>
  <data name="cbVerificationInterval.Items7" xml:space="preserve">
    <value>4 Stunden</value>
  </data>
  <data name="grpNomenclatureFolderFormat.Text" xml:space="preserve">
    <value>Format des Ordners</value>
  </data>
  <data name="grbGeneralTemporaryFolder.Text" xml:space="preserve">
    <value>Temporärer Ordner</value>
  </data>
  <data name="tabSettingsCovers.Text" xml:space="preserve">
    <value>Abdeckungen</value>
  </data>
  <data name="cbTitleLanguage.Items9" xml:space="preserve">
    <value>Koreanisch</value>
  </data>
  <data name="cbTitleLanguage.Items3" xml:space="preserve">
    <value>Spanisch</value>
  </data>
  <data name="chkGeneralMD5.Text" xml:space="preserve">
    <value>Berechnung der MD5-Signatur bei Übertragungen</value>
  </data>
  <data name="cbScrubAlign.Items" xml:space="preserve">
    <value>Automatisch</value>
  </data>
  <data name="lblUser.Text" xml:space="preserve">
    <value>Benutzer:</value>
  </data>
  <data name="tabSettingsGeneral.Text" xml:space="preserve">
    <value>Allgemein</value>
  </data>
</root>