<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="labelCopyright.Text" xml:space="preserve">
    <value>Copyright</value>
  </data>
  <data name="labelProductName.Text" xml:space="preserve">
    <value>Nome del prodotto</value>
  </data>
  <data name="labelVersion.Text" xml:space="preserve">
    <value>Versione</value>
  </data>
  <data name="labelCompanyName.Text" xml:space="preserve">
    <value>Nome della società</value>
  </data>
  <data name="textBoxDescription.Text" xml:space="preserve">
    <value>Descrizione</value>
  </data>
  <data name="lblAboutCurrentLanguage.Text" xml:space="preserve">
    <value>Lingua corrente:</value>
  </data>
  <data name="lblAboutTranslator.Text" xml:space="preserve">
    <value>Traduttore:</value>
  </data>
  <data name="lblAboutProgramName.Text" xml:space="preserve">
    <value>Gestore del backup del GameCube</value>
  </data>
  <data name="tbTranslator.Text" xml:space="preserve">
    <value>Traduzione</value>
  </data>
  <data name="rtbAboutGameTDB.Text" xml:space="preserve">
    <value>GameTDB è un database di giochi collaborativo a cui chiunque può contribuire e che può essere utilizzato in qualsiasi progetto di gioco.

Sul sito web è possibile consultare il database, scaricarlo e contribuirvi aggiungendo informazioni sul gioco e caricando skin.

Sulla vostra Wii o sul vostro computer, potete usare GameTDB per fare quanto segue:

- visualizzare titoli appropriati per il vostro gioco ("Wii Sports" invece di "SPORTS PACK FOR REVOLUTION"), senza dovervi mai rinominare.

- visualizzare la copertina corrispondente alla vostra regione.

- visualizzare informazioni aggiuntive sui giochi (giocatori, modalità online, accessori, editore, sviluppatore...).

- se si dispone di una vasta libreria, è possibile ordinare i giochi, ad esempio, in base al numero di giocatori per raggruppare rapidamente i titoli multiplayer.

- cercare i giochi per GameCube e Wii, per editore, sviluppatore, che corrispondono a una determinata classificazione o che sono usciti in un determinato anno.</value>
  </data>
  <data name="rtbAboutThanks.Text" xml:space="preserve">
    <value>Si ringraziano le seguenti persone per i test, le traduzioni e l'aiuto generale durante lo sviluppo:

- Valclark Junior - Test / Esperienza utente
- Team dell'emulatore Dolphin - Informazioni su GameCube / Wii / RVZ
- Wiim
- WIT (Wiimms ISO Tools)
- Wii Brew
- DDinghoya - traduttore ufficiale in coreano

Oltre a tutti coloro che sono coinvolti nella comunità di conservazione dei giochi.</value>
  </data>
  <data name="tbThanks.Text" xml:space="preserve">
    <value>Grazie</value>
  </data>
  <data name="rtbAboutDonations.Text" xml:space="preserve">
    <value>GameCube Backup Manager è un software gratuito.

Sono stati e saranno compiuti molti sforzi per renderlo il più stabile e ricco di funzionalità possibile. Se lo trovate utile e volete mostrare il vostro apprezzamento, sentitevi liberi di lasciarmi un dollaro o due. Qualsiasi somma ricevuta mi aiuterà molto!

Potete anche inviare donazioni a laetemn@gmail.com tramite PayPal se il link qui sopra non funziona.

Non dimenticate di inviarmi un'e-mail per ringraziarvi.</value>
  </data>
  <data name="tbDonate.Text" xml:space="preserve">
    <value>Donazioni</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>A proposito di...</value>
  </data>
</root>