; Script generated by the Inno Script Studio Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "GameCube Backup Manager"
#define MyAppVersion "2.6.0.1"
#define MyAppSetup "gcbm_setup"
#define MyAppPublisher "Laete Meireles (Axion Drak)"
#define MyAppURL "https://axiondrak.github.io/gcbm.html"
#define MyAppExeName "GCBM.exe"
#define MyAppCopyright "Laete Meireles (C) 2019-2022"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{3B2E0FE0-4BCD-4972-BEB5-9DD65ECA7022}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
DefaultDirName={pf}\gcbm
DisableDirPage=no
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
InfoBeforeFile=README.EN_US.txt
InfoAfterFile=CHANGELOG.EN_US.txt
OutputDir=D:\GameCube-Backup-Manager\GCBM\iss\compiled
OutputBaseFilename={#MyAppSetup}
SetupIconFile="D:\GameCube-Backup-Manager\GCBM\gcbm.ico"
Compression=lzma
SolidCompression=yes
AppCopyright={#MyAppCopyright}
ShowLanguageDialog=no
UninstallDisplayName={#MyAppName}
UninstallDisplayIcon={app}\GCBM.exe
ArchitecturesInstallIn64BitMode=x64

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl";
Name: "brazilianportuguese"; MessagesFile: "compiler:Languages\BrazilianPortuguese.isl";
Name: "spanish"; MessagesFile: "compiler:Languages\Spanish.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
; Executável Padrão
Source: "D:\GameCube-Backup-Manager\GCBM\bin\Release\GCBM.exe"; DestDir: "{app}"; Flags: ignoreversion
; Binários Extras
Source: "D:\GameCube-Backup-Manager\GCBM\bin\elf2dol.exe"; DestDir: "{app}\bin"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "D:\GameCube-Backup-Manager\GCBM\bin\gcit.exe"; DestDir: "{app}\bin"; Flags: ignoreversion recursesubdirs createallsubdirs
; DLL
Source: "D:\GameCube-Backup-Manager\GCBM\bin\AutoUpdater.NET.dll"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "D:\GameCube-Backup-Manager\GCBM\bin\Release\es\GCBM.resources.dll"; DestDir: "{app}\es"; Flags: ignoreversion createallsubdirs recursesubdirs
Source: "D:\GameCube-Backup-Manager\GCBM\bin\Release\ko\GCBM.resources.dll"; DestDir: "{app}\ko"; Flags: ignoreversion createallsubdirs recursesubdirs
Source: "D:\GameCube-Backup-Manager\GCBM\bin\Release\en-US\GCBM.resources.dll"; DestDir: "{app}\en-US"; Flags: ignoreversion createallsubdirs recursesubdirs
; XML
Source: "D:\GameCube-Backup-Manager\GCBM\bin\Release\AutoUpdater.NET.xml"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; Covers Common
Source: "D:\GameCube-Backup-Manager\GCBM\bin\Release\media\covers\3d.png"; DestDir: "{app}\media\covers"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "D:\GameCube-Backup-Manager\GCBM\bin\Release\media\covers\disc.png"; DestDir: "{app}\media\covers"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "D:\GameCube-Backup-Manager\GCBM\bin\Release\media\covers\front.png"; DestDir: "{app}\media\covers"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "D:\GameCube-Backup-Manager\GCBM\bin\Release\media\covers\full.png"; DestDir: "{app}\media\covers"; Flags: ignoreversion recursesubdirs createallsubdirs
; Changelog
Source: "D:\GameCube-Backup-Manager\changelog.en_US.txt"; DestDir: "{app}"; Flags: ignoreversion; Languages: english
Source: "D:\GameCube-Backup-Manager\changelog.txt"; DestDir: "{app}"; Flags: ignoreversion; Languages: brazilianportuguese
; Readme
Source: "D:\GameCube-Backup-Manager\readme.en_US.txt"; DestDir: "{app}"; Flags: ignoreversion; Languages: english
Source: "D:\GameCube-Backup-Manager\readme.txt"; DestDir: "{app}"; Flags: ignoreversion; Languages: brazilianportuguese
; NOTE: Don't use "Flags: ignoreversion" on any shared system files
Source: "D:\GameCube-Backup-Manager\LICENSE"; DestDir: "{app}"; Flags: ignoreversion; Languages: brazilianportuguese
; Web Stuff

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: quicklaunchicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Flags: nowait postinstall skipifsilent runascurrentuser; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"

[UninstallDelete]
Type: filesandordirs; Name: "{app}"

[Code]
function IsDotNetDetected(version: string; service: cardinal): boolean;
// Indicates whether the specified version and service pack of the .NET Framework is installed.
//
// version -- Specify one of these strings for the required .NET Framework version:
//    'v1.1'          .NET Framework 1.1
//    'v2.0'          .NET Framework 2.0
//    'v3.0'          .NET Framework 3.0
//    'v3.5'          .NET Framework 3.5
//    'v4\Client'     .NET Framework 4.0 Client Profile
//    'v4\Full'       .NET Framework 4.0 Full Installation
//    'v4.5'          .NET Framework 4.5
//    'v4.5.1'        .NET Framework 4.5.1
//    'v4.5.2'        .NET Framework 4.5.2
//    'v4.6'          .NET Framework 4.6
//    'v4.6.1'        .NET Framework 4.6.1
//    'v4.6.2'        .NET Framework 4.6.2
//    'v4.7'          .NET Framework 4.7
//    'v4.7.1'        .NET Framework 4.7.1
//    'v4.7.2'        .NET Framework 4.7.2
//    'v4.8'          .NET Framework 4.8
//
// service -- Specify any non-negative integer for the required service pack level:
//    0               No service packs required
//    1, 2, etc.      Service pack 1, 2, etc. required
var
    key, versionKey: string;
    install, release, serviceCount, versionRelease: cardinal;
    success: boolean;
begin
    versionKey := version;
    versionRelease := 0;

    // .NET 1.1 and 2.0 embed release number in version key
    if version = 'v1.1' then begin
        versionKey := 'v1.1.4322';
    end else if version = 'v2.0' then begin
        versionKey := 'v2.0.50727';
    end

    // .NET 4.5 and newer install as update to .NET 4.0 Full
    else if Pos('v4.', version) = 1 then begin
        versionKey := 'v4\Full';
        case version of
          'v4.5':   versionRelease := 378389;
          'v4.5.1': versionRelease := 378675; // 378758 on Windows 8 and older
          'v4.5.2': versionRelease := 379893;
          'v4.6':   versionRelease := 393295; // 393297 on Windows 8.1 and older
          'v4.6.1': versionRelease := 394254; // 394271 before Win10 November Update
          'v4.6.2': versionRelease := 394802; // 394806 before Win10 Anniversary Update
          'v4.7':   versionRelease := 460798; // 460805 before Win10 Creators Update
          'v4.7.1': versionRelease := 461308; // 461310 before Win10 Fall Creators Update
          'v4.7.2': versionRelease := 461808; // 461814 before Win10 April 2018 Update
          'v4.8':   versionRelease := 528040; // 528049 before Win10 May 2019 Update
        end;
    end;

    // installation key group for all .NET versions
    key := 'SOFTWARE\Microsoft\NET Framework Setup\NDP\' + versionKey;

    // .NET 3.0 uses value InstallSuccess in subkey Setup
    if Pos('v3.0', version) = 1 then begin
        success := RegQueryDWordValue(HKLM, key + '\Setup', 'InstallSuccess', install);
    end else begin
        success := RegQueryDWordValue(HKLM, key, 'Install', install);
    end;

    // .NET 4.0 and newer use value Servicing instead of SP
    if Pos('v4', version) = 1 then begin
        success := success and RegQueryDWordValue(HKLM, key, 'Servicing', serviceCount);
    end else begin
        success := success and RegQueryDWordValue(HKLM, key, 'SP', serviceCount);
    end;

    // .NET 4.5 and newer use additional value Release
    if versionRelease > 0 then begin
        success := success and RegQueryDWordValue(HKLM, key, 'Release', release);
        success := success and (release >= versionRelease);
    end;

    result := success and (install = 1) and (serviceCount >= service);
end;


function InitializeSetup(): Boolean;
begin
    if not IsDotNetDetected('v4.6', 0) then begin
        MsgBox('GameCube Backup Manager requires Microsoft .NET Framework 4.6.'#13#13
            'Please download and install this version or use Windows Update to ' #13
            'install this version, and then re-run the GameCube Backup Manager setup program.', mbInformation, MB_OK);
        result := false;
    end else
        result := true;
end;